declare_args() {
  build_with_chromium = false
}

import("../webrtc.gni")

if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")
  import("//third_party/jni_zero/jni_zero.gni")
} else if (is_mac) {
  import("//build/config/mac/rules.gni")
} else if (is_ios) {
  import("//build/config/ios/rules.gni")
} else if (is_linux || is_chromeos) {
  import("//build/config/linux/pkg_config.gni")
}

group("examples") {
  deps = [
    ":crtc"
  ]
}

rtc_shared_library("crtc") {
  libs = []
  defines = []
  
  sources = [
    "src/atomic.cc",
    "src/event.cc",
    "src/error.cc",
    "src/arraybuffer.cc",
    "src/module.cc",
    "src/rtcpeerconnection.cc",
    "src/rtcdatachannel.cc",
    "src/mediastream.cc",
    "src/mediastreamtrack.cc",
    "src/time.cc",
    "src/audiobuffer.cc",
    "src/audiosource.cc",
    "src/videoframe.cc",
  ]

  deps = [
    "../api:create_peerconnection_factory",
    "../api:libjingle_peerconnection_api",
    "../api:media_stream_interface",
    "../api/audio_codecs:builtin_audio_decoder_factory",
    "../api/audio_codecs:builtin_audio_encoder_factory",
    "../api/video_codecs:builtin_video_decoder_factory",
    "../api/video:video_frame",
    "../media:rtc_audio_video",
    "../media:rtc_internal_video_codecs",
    "../media:rtc_media",
    "../media:rtc_media_base",
    "../modules/audio_device",
    "../pc:peerconnection",
    "../rtc_base:stringutils",
    "../rtc_base:threading",
  ]
  
  if (is_win) {
    deps += [
      "../rtc_base:win32",
      "../rtc_base:win32_socket_init",
    ]
  }
  
  if (is_linux || is_chromeos) {
    cflags += [ "-Wno-deprecated-declarations" ]
  }  

  include_dirs = [
    "include",
  ]
}

